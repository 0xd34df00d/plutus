(program
  (let
    (nonrec)
    (datatypebind
      (datatype (tyvardecl Unit (type))  Unit_match (vardecl Unit Unit))
    )
    (termbind (nonstrict) (vardecl joinError Unit) (error Unit))
    (datatypebind
      (datatype
        (tyvardecl Bool (type))

        Bool_match
        (vardecl True Bool) (vardecl False Bool)
      )
    )
    (lam
      x
      Bool
      (lam
        y
        Bool
        [
          [
            [
              { [ Bool_match x ] (fun Unit Unit) }
              (lam
                thunk
                Unit
                [
                  [
                    [
                      { [ Bool_match y ] (fun Unit Unit) }
                      (lam thunk Unit joinError)
                    ]
                    (lam thunk Unit Unit)
                  ]
                  Unit
                ]
              )
            ]
            (lam thunk Unit Unit)
          ]
          Unit
        ]
      )
    )
  )
)