(program
  (let
    (rec)
    (datatypebind
      (datatype
        (tyvardecl List (fun (type) (type)))
        (tyvardecl a (type))
        Nil_match
        (vardecl Nil [List a]) (vardecl Cons (fun a (fun [List a] [List a])))
      )
    )
    [
      (let
        (nonrec)
        (termbind
          (strict)
          (vardecl
            c
            (fun (con integer) (fun [List (con integer)] [List (con integer)]))
          )
          { Cons (con integer) }
        )
        (lam n [List (con integer)] [ [ c (con integer 1) ] n ])
      )
      { Nil (con integer) }
    ]
  )
)