(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl Ordering (type))

        Ordering_match
        (vardecl EQ Ordering) (vardecl GT Ordering) (vardecl LT Ordering)
      )
    )
    (datatypebind
      (datatype (tyvardecl Unit (type))  Unit_match (vardecl Unit Unit))
    )
    (datatypebind
      (datatype
        (tyvardecl Bool (type))

        Bool_match
        (vardecl True Bool) (vardecl False Bool)
      )
    )
    (lam
      x
      (con integer)
      (lam
        y
        (con integer)
        [
          [
            [
              {
                [
                  Bool_match
                  (let
                    (nonrec)
                    (termbind
                      (strict)
                      (vardecl b (con bool))
                      [ [ (builtin equalsInteger) x ] y ]
                    )
                    [ [ [ { (builtin ifThenElse) Bool } b ] True ] False ]
                  )
                ]
                (fun Unit Ordering)
              }
              (lam thunk Unit EQ)
            ]
            (lam
              thunk
              Unit
              [
                [
                  [
                    {
                      [
                        Bool_match
                        (let
                          (nonrec)
                          (termbind
                            (strict)
                            (vardecl b (con bool))
                            [ [ (builtin lessThanEqualsInteger) x ] y ]
                          )
                          [ [ [ { (builtin ifThenElse) Bool } b ] True ] False ]
                        )
                      ]
                      (fun Unit Ordering)
                    }
                    (lam thunk Unit LT)
                  ]
                  (lam thunk Unit GT)
                ]
                Unit
              ]
            )
          ]
          Unit
        ]
      )
    )
  )
)