(program
  (let
    (nonrec)
    (datatypebind
      (datatype
        (tyvardecl DefaultMethods (fun (type) (type)))
        (tyvardecl a (type))
        DefaultMethods_match
        (vardecl
          CConsDefaultMethods
          (fun (fun a (con integer)) (fun (fun a (con integer)) [DefaultMethods a]))
        )
      )
    )
    (termbind
      (nonstrict)
      (vardecl fDefaultMethodsInteger [DefaultMethods (con integer)])
      [
        [ { CConsDefaultMethods (con integer) } (lam a (con integer) a) ]
        (lam a (con integer) [ [ (builtin addInteger) a ] (con integer 1) ])
      ]
    )
    (lam
      ds
      (con integer)
      [
        (let
          (nonrec)
          (termbind
            (strict)
            (vardecl dDefaultMethods [DefaultMethods (con integer)])
            fDefaultMethodsInteger
          )
          (lam
            a
            (con integer)
            [
              [
                {
                  [ { DefaultMethods_match (con integer) } dDefaultMethods ]
                  (fun (con integer) (con integer))
                }
                (lam
                  v
                  (fun (con integer) (con integer))
                  (lam v (fun (con integer) (con integer)) v)
                )
              ]
              a
            ]
          )
        )
        ds
      ]
    )
  )
)